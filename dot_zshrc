# --- Zimfw Setup ---
ZIM_HOME="${HOME}/.zim"
ZIMFW="${ZIM_HOME}/zimfw.zsh"
ZIMRC="${ZDOTDIR:-$HOME}/.zimrc"

if [[ ! -f $ZIMFW ]]; then
  mkdir -p "$ZIM_HOME"
  wget -q -O "$ZIMFW" https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

if [[ ! -f "${ZIM_HOME}/init.zsh" || "${ZIM_HOME}/init.zsh" -ot "$ZIMRC" ]]; then
  source "$ZIMFW" init -q
fi
source "${ZIM_HOME}/init.zsh"

# --- Cached Completion Init ---
ZCOMPDUMP="${HOME}/.zcompdump"
autoload -Uz compinit
if [[ ! -s $ZCOMPDUMP || $ZCOMPDUMP -ot $HOME/.zshrc ]]; then
  compinit -C
else
  compinit -C
fi

# --- Lazy load zoxide on first 'cd' usage ---
if command -v zoxide &>/dev/null; then
  zoxide_lazy_init() {
    eval "$(zoxide init --cmd cd zsh)"
    unfunction zoxide_lazy_init
  }
  cd() {
    zoxide_lazy_init
    cd "$@"
  }
fi

# Defer oh-my-posh initialization until first prompt draw
if command -v oh-my-posh &>/dev/null; then
  OMP_CONFIG="${HOME}/.config/oh-my-posh/oh-my-posh.toml"
  function _omp_precmd() {
    PS1="$(oh-my-posh print primary --shell zsh --config "$OMP_CONFIG" --pwd "$PWD" --status $? --terminal-width $COLUMNS)"
  }
  autoload -Uz add-zsh-hook
  add-zsh-hook precmd _omp_precmd
fi

# --- Keybindings ---
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^[w' kill-region
bindkey ' ' magic-space  # History expansion on space
bindkey '^[[H' beginning-of-line # Home key
bindkey '^[[F' end-of-line # End key
bindkey '^[[3~' delete-char # Del key
bindkey '^[[1;3C' forward-word # Alt+Right
bindkey '^[[1;3D' backward-word # Alt+Left
bindkey '^[[1;5C' forward-word # Ctrl+Right
bindkey '^[[1;5D' backward-word # Ctrl+Left
bindkey '^[[A' history-beginning-search-backward # Up arrow
bindkey '^[[B' history-beginning-search-forward # Down arrow

# --- History ---
HISTFILE=~/.zsh_history
HISTSIZE=5000
SAVEHIST=5000
setopt appendhistory sharehistory hist_ignore_space hist_ignore_all_dups \
       hist_save_no_dups hist_ignore_dups hist_find_no_dups

# --- Completion Styles ---
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# --- Aliases ---
alias ls='eza'
alias c='clear'
